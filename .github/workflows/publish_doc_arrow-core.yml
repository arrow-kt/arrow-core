name: "arrow-core: publish documentation"

on:
  push:
    branches:
    - master

jobs:
  arrow-core_publish_documentation:

    env:
      BASEDIR: ${{github.workspace}}/..
      JAVA_OPTS: -Xms512m -Xmx1024m
      ARROW_LIB: arrow-core

    runs-on: macos-latest
    timeout-minutes: 90

    steps:
    - uses: actions/checkout@v2
    - name: Checkout orchestrator
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git clone https://github.com/arrow-kt/arrow.git $BASEDIR/arrow --depth 1 --no-single-branch
        . $BASEDIR/arrow/scripts/commons4gradle.sh
        updateOrchestrator master
    - name: Install
      run: |
        $BASEDIR/arrow/scripts/action-install.sh $ARROW_LIB
    - name: Run Ank for site
      run: |
        $BASEDIR/arrow/scripts/site-download.sh
        $BASEDIR/arrow/scripts/site-run-ank.sh
    - name: Generate API doc and validate
      run: ./gradlew buildArrowDoc
    - name: Join docs to site
      run: $BASEDIR/arrow/scripts/project-locate-doc.sh $ARROW_LIB
    - name: Build site
      run: $BASEDIR/arrow/scripts/site-build.sh
    - name: Deploy
      env:
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_CLOUDFRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID }}
      run: $BASEDIR/arrow/scripts/site-publish.sh
    - name: Prepare environment to create the issue (new package)
      if: failure()
      id: create-issue
      run: |
        $BASEDIR/arrow/scripts/issue-create-description.sh > issue.log
        echo ::set-output name=title::$(git log -1 --pretty=format:%s | sed 's/"//g')
        SCRIPT_DIR=$(find $HOME -name github-script | head -n1)
        NODE_MODULES=$(find $SCRIPT_DIR -maxdepth 2 -name node_modules | head -n1)
        cd $NODE_MODULES/..
        rm -rf node_modules
        npm install
        npm install xmlhttprequest
    - name: Create the issue
      if: failure()
      uses: actions/github-script@0.3.0
      with:
        github-token: ${{github.token}}
        script: |
          var XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;
          function readFile(file) {
            var content;
            var rawFile = new XMLHttpRequest();
            rawFile.open("GET", file, false);
            rawFile.onreadystatechange = function () {
                content = rawFile.responseText;
            }
            rawFile.send();
            return content;
          }
          await github.issues.create({...context.repo,
            title: "DOC: error when merging '${{ steps.create-issue.outputs.title }}' on master branch",
            body: readFile("file://${{github.workspace}}/issue.log")});
    - name: Save content
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
        AWS_CLOUDFRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID }}
      run: aws s3 ls s3://$S3_BUCKET --recursive --summarize > site-content.log
    - uses: actions/upload-artifact@v1
      with:
        name: site-content
        path: site-content.log
