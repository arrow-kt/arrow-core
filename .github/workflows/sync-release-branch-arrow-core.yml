name: Sync release branch

on:
  schedule:
    - cron: '0 4 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      with:
        ref: release/0.11.0
    - name: Merge master on release branch
      id: merge
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
      run: |
        git remote set-url origin https://arrow-kt:$GITHUB_TOKEN@github.com/arrow-kt/arrow-core.git
        git config --global user.email "raulraja@users.noreply.github.com"
        git config --global user.name "raulraja"
        git merge origin/master -m "Merge master on release branch"
        echo ::set-output name=changes::$(git diff origin/release/0.11.0..HEAD)
    - name: Set up JDK 1.8
      if: steps.merge.outputs.changes != ''
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        architecture: x64
    - name: Validate Gradle Wrapper
      if: steps.merge.outputs.changes != ''
      uses: gradle/wrapper-validation-action@v1
    - name: Build with Gradle
      if: steps.merge.outputs.changes != ''
      env:
        JAVA_OPTS: -Xms512m -Xmx1024m
      run: |
        ./gradlew clean build
        ./gradlew check
    - name: Push changes
      if: steps.merge.outputs.changes != ''
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
      run: |
        git push origin HEAD:release/0.11.0
    - name: Prepare environment to create the issue (new package)
      if: failure()
      run: |
        echo -e "## Error log\nhttps://github.com/arrow-kt/arrow-core/commit/$GITHUB_SHA/checks\n" > issue.log
        echo -e "## Conflicts\n\`\`\`\n$(git diff --diff-filter=U)\n\`\`\`\n" >> issue.log
        rm -rf /home/runner/work/_actions/actions/github-script/0.3.0/node_modules
        cd /home/runner/work/_actions/actions/github-script/0.3.0/
        npm install
        npm install xmlhttprequest
    - name: Create the issue
      if: failure()
      uses: actions/github-script@0.3.0
      with:
        github-token: ${{github.token}}
        script: |
          var XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;
          function readFile(file) {
            var content;
            var rawFile = new XMLHttpRequest();
            rawFile.open("GET", file, false);
            rawFile.onreadystatechange = function () {
                content = rawFile.responseText;
            }
            rawFile.send();
            return content;
          }
          await github.issues.create({...context.repo, 
            title: 'Error when sync release/0.11.0 with master', 
            body: readFile("file:///home/runner/work/arrow-core/arrow-core/issue.log")});
